# generated by datamodel-codegen:
#   filename:  api.json
#   timestamp: 2025-04-06T06:36:23+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, constr


class AccountType(Enum):
    artist = 'artist'
    manager = 'manager'
    lawyer = 'lawyer'
    producer = 'producer'


class AuthenticationErrorResponseContent(BaseModel):
    message: str


class ContractStatus(Enum):
    processing = 'processing'
    complete = 'complete'
    error = 'error'
    awaiting_upload = 'awaiting_upload'


class ContractType(Enum):
    recording = 'recording'
    publishing = 'publishing'
    management = 'management'
    producer = 'producer'
    tbd = 'tbd'


class DeleteContractRequestContent(BaseModel):
    contractId: constr(regex=r'^[A-Za-z0-9-]+$')


class DeleteContractResponseContent(BaseModel):
    success: bool


class GetContractReadURLRequestContent(BaseModel):
    contractId: constr(regex=r'^[A-Za-z0-9-]+$')


class GetContractReadURLResponseContent(BaseModel):
    url: str


class GetContractRequestContent(BaseModel):
    contractId: constr(regex=r'^[A-Za-z0-9-]+$')


class GetProfileRequestContent(BaseModel):
    userId: Optional[constr(regex=r'^[A-Za-z0-9-]+$')] = None


class GetUploadURLRequestContent(BaseModel):
    name: str


class InternalServerErrorResponseContent(BaseModel):
    message: str


class PingResponseContent(BaseModel):
    message: str


class PresignedPostData(BaseModel):
    url: str
    fields: Any


class ProcessingIncompleteErrorResponseContent(BaseModel):
    message: str


class Question(BaseModel):
    question: str
    answer: str


class ResourceNotFoundErrorResponseContent(BaseModel):
    message: str


class ShareContractRequestContent(BaseModel):
    contractId: constr(regex=r'^[A-Za-z0-9-]+$')
    emailsToAdd: Optional[List[str]] = None
    emailsToRemove: Optional[List[str]] = None


class SharedUserDetails(BaseModel):
    userId: constr(regex=r'^[A-Za-z0-9-]+$')
    email: str
    sharedTime: float


class UpdateContractRequestContent(BaseModel):
    contractId: constr(regex=r'^[A-Za-z0-9-]+$')
    name: str


class UpdateContractResponseContent(BaseModel):
    success: bool


class UpdateProfileRequestContent(BaseModel):
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    displayName: Optional[str] = None
    accountType: Optional[AccountType] = None
    bio: Optional[str] = None
    isOver18: Optional[bool] = None


class UpdateProfileResponseContent(BaseModel):
    success: bool
    message: str
    userId: constr(regex=r'^[A-Za-z0-9-]+$')
    updatedFields: Optional[List[str]] = None


class UserProfile(BaseModel):
    userId: Optional[constr(regex=r'^[A-Za-z0-9-]+$')] = None
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    displayName: Optional[str] = None
    email: Optional[str] = None
    accountType: Optional[AccountType] = None
    bio: Optional[str] = None


class ValidationErrorResponseContent(BaseModel):
    message: str


class ContractSummaryItem(BaseModel):
    contractId: constr(regex=r'^[A-Za-z0-9-]+$')
    name: str
    uploadedOn: float
    type: ContractType
    status: ContractStatus
    isOwner: bool
    ownerId: constr(regex=r'^[A-Za-z0-9-]+$')
    sharedWith: Optional[List[constr(regex=r'^[A-Za-z0-9-]+$')]] = None


class GetProfileResponseContent(BaseModel):
    userId: constr(regex=r'^[A-Za-z0-9-]+$')
    profile: UserProfile


class GetUploadURLResponseContent(BaseModel):
    url_info: PresignedPostData


class ListContractsResponseContent(BaseModel):
    owned: List[ContractSummaryItem]
    shared: List[ContractSummaryItem]


class QASection(BaseModel):
    title: str
    questions: List[Question]


class QASections(BaseModel):
    sections: List[QASection]


class ShareContractResponseContent(BaseModel):
    success: bool
    contractId: constr(regex=r'^[A-Za-z0-9-]+$')
    sharedWith: List[SharedUserDetails]
    added: Optional[List[str]] = None
    removed: Optional[List[str]] = None
    invalidRemoves: Optional[List[str]] = None


class GetContractResponseContent(BaseModel):
    contractId: constr(regex=r'^[A-Za-z0-9-]+$')
    name: str
    type: ContractType
    terms: Any
    iq_qa: QASections
    isOwner: bool
    ownerId: constr(regex=r'^[A-Za-z0-9-]+$')
    sharedWith: List[constr(regex=r'^[A-Za-z0-9-]+$')]
