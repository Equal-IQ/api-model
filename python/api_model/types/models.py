# generated by datamodel-codegen:
#   filename:  api.json
#   timestamp: 2025-05-30T21:03:47+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, List, Optional, Union

from pydantic import BaseModel, Field, RootModel


class AccountType(Enum):
    artist = 'artist'
    manager = 'manager'
    lawyer = 'lawyer'
    producer = 'producer'
    publisher = 'publisher'


class ArchiveComposerContractRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Fa-f0-9-]{36}$')


class ArchiveComposerContractResponseContent(BaseModel):
    message: str


class AuthenticationErrorResponseContent(BaseModel):
    message: str


class ComposerContractSection(Enum):
    SERVICES = 'SERVICES'
    COMPENSATION = 'COMPENSATION'
    INTELLECTUAL_PROPERTY = 'INTELLECTUAL_PROPERTY'
    TERM_AND_TERMINATION = 'TERM_AND_TERMINATION'
    CONFIDENTIALITY = 'CONFIDENTIALITY'


class ComposerContractStatus(Enum):
    NEW = 'NEW'
    CLEAN_IN_VAULT = 'CLEAN_IN_VAULT'
    DIRTY = 'DIRTY'
    ARCHIVED = 'ARCHIVED'


class ComposerContractType(Enum):
    PRODUCER = 'PRODUCER'


class ComposerFormData(BaseModel):
    clientName: Optional[str] = None
    providerName: Optional[str] = None
    date: Optional[str] = None


class ContractStatus(Enum):
    processing = 'processing'
    complete = 'complete'
    error = 'error'
    awaiting_upload = 'awaiting_upload'


class SharedWithItem(RootModel[str]):
    root: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class SharedUser(RootModel[str]):
    root: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class ContractType(Enum):
    recording = 'recording'
    publishing = 'publishing'
    management = 'management'
    producer = 'producer'
    tbd = 'tbd'


class CreateComposerContractRequestContent(BaseModel):
    title: str
    type: ComposerContractType
    formDetails: Optional[ComposerFormData] = None
    sourceRevisionId: Optional[str] = Field(None, pattern='^[A-Fa-f0-9-]{36}$')


class DeleteContractRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class DeleteContractResponseContent(BaseModel):
    success: bool


class DeleteContractSignatureRequestContent(BaseModel):
    contractId: str


class FixedTermValue(BaseModel):
    unit: str
    value: str
    name: Optional[str] = None
    numericValue: Optional[float] = None
    condition: Optional[str] = None


class FixedValueTermInference(BaseModel):
    primary: FixedTermValue
    subterms: Optional[List[FixedTermValue]] = None


class GetComposerContractContentRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Fa-f0-9-]{36}$')


class GetComposerContractMetaRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Fa-f0-9-]{36}$')


class GetContractReadURLRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class GetContractReadURLResponseContent(BaseModel):
    url: str


class GetContractRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class GetContractSignaturesRequestContent(BaseModel):
    contractId: str


class GetProfilePictureRequestContent(BaseModel):
    userId: Optional[str] = Field(None, pattern='^[A-Za-z0-9-]+$')


class GetProfilePictureResponseContent(BaseModel):
    profilePictureURL: str


class GetProfileRequestContent(BaseModel):
    userId: Optional[str] = Field(None, pattern='^[A-Za-z0-9-]+$')


class GetUploadURLRequestContent(BaseModel):
    name: str


class InternalServerErrorResponseContent(BaseModel):
    message: str


class ListComposerContractVersionsRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Fa-f0-9-]{36}$')


class PingResponseContent(BaseModel):
    message: str


class PresignedPostData(BaseModel):
    url: str
    fields: Any


class ProcessingIncompleteErrorResponseContent(BaseModel):
    message: str


class QA(BaseModel):
    question: str
    answer: str


class QASection(BaseModel):
    section: str
    qa: List[QA]


class ResourceNotFoundErrorResponseContent(BaseModel):
    message: str


class SaveComposerContractToVaultRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Fa-f0-9-]{36}$')


class SaveComposerContractToVaultResponseContent(BaseModel):
    message: str


class ShareContractRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    emailsToAdd: Optional[List[str]] = None
    emailsToRemove: Optional[List[str]] = None


class SharedUserDetails(BaseModel):
    userId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    email: str
    sharedTime: float


class SignContractResult(Enum):
    SUCCESS = 'SUCCESS'
    FAILURE = 'FAILURE'


class SignatureStatus(Enum):
    signed = 'signed'
    declined = 'declined'
    pending = 'pending'


class Term(BaseModel):
    name: str
    definition: str
    unitType: str
    citation: Optional[str] = None
    fixedValues: Optional[FixedValueTermInference] = None


class TermSection(BaseModel):
    sectionId: Optional[ComposerContractSection] = None
    name: Optional[str] = None
    definition: Optional[str] = None
    citation: Optional[str] = None
    unit: Optional[str] = None


class UpdateContractRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    name: str


class UpdateContractResponseContent(BaseModel):
    success: bool


class UpdateProfileRequestContent(BaseModel):
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    displayName: Optional[str] = None
    accountType: Optional[AccountType] = None
    bio: Optional[str] = None
    isOver18: Optional[bool] = None


class UpdateProfileResponseContent(BaseModel):
    success: bool
    message: str
    userId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    updatedFields: Optional[List[str]] = None


class UpdateSignatureStatusRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    status: SignatureStatus


class UpdateSignatureStatusResponseContent(BaseModel):
    result: SignContractResult
    message: str


class UploadProfilePictureRequestContent(BaseModel):
    image: Optional[str] = None
    userId: Optional[str] = Field(None, pattern='^[A-Za-z0-9-]+$')


class UploadProfilePictureResponseContent(BaseModel):
    message: Optional[str] = None
    picture_id: Optional[str] = None


class UserProfile(BaseModel):
    userId: Optional[str] = Field(None, pattern='^[A-Za-z0-9-]+$')
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    displayName: Optional[str] = None
    email: Optional[str] = None
    accountType: Optional[AccountType] = None
    bio: Optional[str] = None


class ValidationErrorResponseContent(BaseModel):
    message: str


class ClauseSection(BaseModel):
    sectionId: Optional[ComposerContractSection] = None
    text: Optional[str] = None


class ComposerContractMeta(BaseModel):
    contractId: Optional[str] = Field(None, pattern='^[A-Fa-f0-9-]{36}$')
    revisionId: Optional[str] = None
    title: Optional[str] = None
    type: Optional[ComposerContractType] = None
    status: Optional[ComposerContractStatus] = None
    createdAt: Optional[float] = None
    updatedAt: Optional[float] = None
    revisionHistory: Optional[List[str]] = None


class ContractSignature(BaseModel):
    userId: Optional[str] = None
    status: Optional[SignatureStatus] = None
    timestamp: Optional[float] = None


class ContractSummaryItem(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    name: str
    uploadedOn: float
    type: ContractType
    status: ContractStatus
    isOwner: bool
    ownerId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    sharedWith: Optional[List[SharedWithItem]] = None
    sharedUsers: Optional[List[SharedUser]] = None
    sharedEmails: Optional[List[str]] = None
    isComposerGenerated: Optional[bool] = None


class DeleteContractSignatureResponseContent(BaseModel):
    result: Optional[SignContractResult] = None
    message: Optional[str] = None


class ExposeTypesResponseContent(BaseModel):
    QASectionsList: Optional[List[QASection]] = None


class GetComposerContractMetaResponseContent(BaseModel):
    meta: Optional[ComposerContractMeta] = None


class GetContractResponseContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    name: str
    type: ContractType
    terms: List[Term]
    qa_sections: str
    isOwner: bool
    ownerId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    sharedWith: List[SharedWithItem]


class GetContractSignaturesResponseContent(BaseModel):
    contractId: Optional[str] = None
    signatures: Optional[List[ContractSignature]] = None


class GetProfileResponseContent(BaseModel):
    userId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    profile: UserProfile


class GetUploadURLResponseContent(BaseModel):
    url_info: PresignedPostData


class ListComposerContractVersionsResponseContent(BaseModel):
    contractId: Optional[str] = Field(None, pattern='^[A-Fa-f0-9-]{36}$')
    versions: Optional[List[ComposerContractMeta]] = None


class ListComposerContractsResponseContent(BaseModel):
    contracts: Optional[List[ComposerContractMeta]] = None


class ListContractsResponseContent(BaseModel):
    owned: List[ContractSummaryItem]
    shared: List[ContractSummaryItem]


class SectionUnion1(BaseModel):
    term: TermSection


class SectionUnion2(BaseModel):
    clause: ClauseSection


class SectionUnion(RootModel[Union[SectionUnion1, SectionUnion2]]):
    root: Union[SectionUnion1, SectionUnion2]


class ShareContractResponseContent(BaseModel):
    success: bool
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    sharedWith: List[SharedUserDetails]
    added: Optional[List[str]] = None
    removed: Optional[List[str]] = None
    invalidRemoves: Optional[List[str]] = None


class SignContractRequestContent(BaseModel):
    contractId: str
    status: SignatureStatus


class SignContractResponseContent(BaseModel):
    result: SignContractResult
    message: Optional[str] = None


class UpdateComposerContractContentRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Fa-f0-9-]{36}$')
    sections: Optional[List[SectionUnion]] = None


class UpdateComposerContractMetaRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Fa-f0-9-]{36}$')
    title: Optional[str] = None
    sections: Optional[List[SectionUnion]] = None
    status: Optional[ComposerContractStatus] = None


class ComposerContractContent(BaseModel):
    sections: Optional[List[SectionUnion]] = None


class ComposerContractData(BaseModel):
    meta: Optional[ComposerContractMeta] = None
    content: Optional[ComposerContractContent] = None


class CreateComposerContractResponseContent(BaseModel):
    contract: Optional[ComposerContractData] = None


class GetComposerContractContentResponseContent(BaseModel):
    content: Optional[ComposerContractContent] = None


class UpdateComposerContractContentResponseContent(BaseModel):
    contract: Optional[ComposerContractData] = None


class UpdateComposerContractMetaResponseContent(BaseModel):
    contract: Optional[ComposerContractData] = None
