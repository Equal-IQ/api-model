# generated by datamodel-codegen:
#   filename:  api.json

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List

from pydantic import BaseModel, Field, RootModel


class AccountType(Enum):
    artist = 'artist'
    manager = 'manager'
    lawyer = 'lawyer'
    producer = 'producer'
    publisher = 'publisher'
    executive = 'executive'


class AuthenticationErrorResponseContent(BaseModel):
    message: str


class ContractStatus(Enum):
    processing = 'processing'
    complete = 'complete'
    error = 'error'
    awaiting_upload = 'awaiting_upload'


class SharedWithItem(RootModel[str]):
    root: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class SharedUser(RootModel[str]):
    root: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class SharedEmail(RootModel[str]):
    root: str = Field(..., pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$')


class ContractType(Enum):
    recording = 'recording'
    publishing = 'publishing'
    management = 'management'
    producer = 'producer'
    services = 'services'
    tbd = 'tbd'


class ContractVariableType(Enum):
    eq_term = 'eq_term'
    discovered_term = 'discovered_term'
    external_term = 'external_term'
    internal_citation = 'internal_citation'


class DeleteContractRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class DeleteContractResponseContent(BaseModel):
    success: bool


class DurationType(Enum):
    fixed = 'fixed'
    indefinite = 'indefinite'
    renewable = 'renewable'
    other = 'other'


class EQModeItem(BaseModel):
    """
    Deprecated
    """

    title: str | None = None
    value: str | None = None


class EmptyStructure(BaseModel):
    pass


class EqCardKey(Enum):
    moneyYouReceive = 'moneyYouReceive'
    whatYouOwn = 'whatYouOwn'
    whatYoureResponsibleFor = 'whatYoureResponsibleFor'
    howLongThisDealLasts = 'howLongThisDealLasts'
    risksCostsLegalStuff = 'risksCostsLegalStuff'


class EqCardType(Enum):
    A = 'A'
    B = 'B'


class EMPTY(BaseModel):
    EMPTY: EmptyStructure


class EqLegalCard(BaseModel):
    risks: str
    costs: str
    legal: str


class EqMoneyCard(BaseModel):
    majorNumber: str
    paidAfterList: List[str] | None = None


class FixedTermValue(BaseModel):
    unit: str
    value: str
    name: str | None = None
    numericValue: float | None = None
    condition: str | None = None


class FixedValueTermInference(BaseModel):
    primary: FixedTermValue
    subterms: List[FixedTermValue] | None = None


class GetContractReadURLRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class GetContractReadURLResponseContent(BaseModel):
    url: str


class GetContractRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class GetProfilePictureRequestContent(BaseModel):
    userId: str | None = Field(None, pattern='^[A-Za-z0-9-]+$')


class GetProfilePictureResponseContent(BaseModel):
    profilePictureURL: str


class GetProfileRequestContent(BaseModel):
    userId: str | None = Field(None, pattern='^[A-Za-z0-9-]+$')


class GetSpecialContractRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class GetSpecialContractResponseContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    name: str
    type: ContractType
    eqmode: Any
    sections: Any
    isOwner: bool
    ownerId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    sharedWith: List[SharedWithItem]


class GetTTSURLsRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class GetUploadURLRequestContent(BaseModel):
    name: str


class InternalServerErrorResponseContent(BaseModel):
    message: str


class PingResponseContent(BaseModel):
    message: str


class PresignedPostData(BaseModel):
    url: str
    fields: Any


class ProcessingIncompleteErrorResponseContent(BaseModel):
    message: str


class QA(BaseModel):
    question: str
    answer: str


class QASection(BaseModel):
    section: str
    qa: List[QA]


class ResourceNotFoundErrorResponseContent(BaseModel):
    message: str


class EmailsToAddItem(RootModel[str]):
    root: str = Field(..., pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$')


class EmailsToRemoveItem(RootModel[str]):
    root: str = Field(..., pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$')


class ShareContractRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    emailsToAdd: List[EmailsToAddItem] | None = None
    emailsToRemove: List[EmailsToRemoveItem] | None = None


class AddedItem(RootModel[str]):
    root: str = Field(..., pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$')


class RemovedItem(RootModel[str]):
    root: str = Field(..., pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$')


class InvalidRemove(RootModel[str]):
    root: str = Field(..., pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$')


class SharedUserDetails(BaseModel):
    userId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    email: str = Field(..., pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$')
    sharedTime: float


class SimpleTermDescription(BaseModel):
    title: str
    description: str


class TTSPresignedUrlMap(RootModel[Dict[str, str] | None]):
    root: Dict[str, str] | None = None


class Term(BaseModel):
    name: str
    definition: str
    unitType: str
    citation: str | None = None
    fixedValues: FixedValueTermInference | None = None


class UpdateContractRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    name: str


class UpdateContractResponseContent(BaseModel):
    success: bool


class UpdateProfileRequestContent(BaseModel):
    firstName: str | None = None
    lastName: str | None = None
    displayName: str | None = None
    accountType: AccountType | None = None
    bio: str | None = None
    isOver18: bool | None = None


class UpdateProfileResponseContent(BaseModel):
    success: bool
    message: str
    userId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    updatedFields: List[str] | None = None


class UploadProfilePictureRequestContent(BaseModel):
    image: str | None = None
    userId: str | None = Field(None, pattern='^[A-Za-z0-9-]+$')


class UploadProfilePictureResponseContent(BaseModel):
    message: str | None = None
    picture_id: str | None = None


class UserProfile(BaseModel):
    userId: str | None = Field(None, pattern='^[A-Za-z0-9-]+$')
    firstName: str | None = None
    lastName: str | None = None
    displayName: str | None = None
    email: str | None = Field(None, pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$')
    accountType: AccountType | None = None
    bio: str | None = None


class ValidationErrorResponseContent(BaseModel):
    message: str


class ContractSummaryItem(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    name: str
    uploadedOn: float
    type: ContractType
    status: ContractStatus
    isOwner: bool
    ownerId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    sharedWith: List[SharedWithItem] | None = None
    sharedUsers: List[SharedUser] | None = None
    sharedEmails: List[SharedEmail] | None = None


class ContractVariable(BaseModel):
    name: str
    type: ContractVariableType
    id: str
    value: str | None = None
    level: float | None = None
    confidence: float | None = None
    firstOccurrence: float | None = None
    context: str | None = None
    variations: List[str] | None = None
    referencedSection: str | None = None
    definitionCitation: str | None = None


class MONEYRECEIVED(BaseModel):
    MONEY_RECEIVED: EqMoneyCard


class LEGAL(BaseModel):
    LEGAL: EqLegalCard


class EqDurationCard(BaseModel):
    durationType: DurationType
    durationText: str | None = None
    durationDetails: List[SimpleTermDescription] | None = None


class EqOwnershipCard(BaseModel):
    ownershipTerms: List[SimpleTermDescription]


class EqResponsibilitesCard(BaseModel):
    resposibilites: List[SimpleTermDescription]


class ExposeTypesResponseContent(BaseModel):
    QASectionsList: List[QASection] | None = None
    ContractVariable_1: ContractVariable | None = Field(None, alias='ContractVariable')
    ContractVariableType_1: ContractVariableType | None = Field(
        None, alias='ContractVariableType'
    )


class GetProfileResponseContent(BaseModel):
    userId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    profile: UserProfile


class GetTTSURLsResponseContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    ttsSrcUrl: TTSPresignedUrlMap


class GetUploadURLResponseContent(BaseModel):
    url_info: PresignedPostData


class IqSection(BaseModel):
    qa_sections: List[QASection] | None = Field(
        None, description='deprecation path (v0.5)'
    )


class ListContractsResponseContent(BaseModel):
    owned: List[ContractSummaryItem]
    shared: List[ContractSummaryItem]


class ListSpecialContractsResponseContent(BaseModel):
    owned: List[ContractSummaryItem]
    shared: List[ContractSummaryItem]


class ShareContractResponseContent(BaseModel):
    success: bool
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    sharedWith: List[SharedUserDetails]
    added: List[AddedItem] | None = None
    removed: List[RemovedItem] | None = None
    invalidRemoves: List[InvalidRemove] | None = None


class OWNERSHIP(BaseModel):
    OWNERSHIP: EqOwnershipCard


class RESPONSIBILITES(BaseModel):
    RESPONSIBILITES: EqResponsibilitesCard


class DURATION(BaseModel):
    DURATION: EqDurationCard


class EqCardUniqueData(
    RootModel[MONEYRECEIVED | OWNERSHIP | RESPONSIBILITES | DURATION | LEGAL | EMPTY]
):
    root: MONEYRECEIVED | OWNERSHIP | RESPONSIBILITES | DURATION | LEGAL | EMPTY


class EQModeCard(BaseModel):
    id: EqCardKey
    title: str
    type: EqCardType
    cardUniqueData: EqCardUniqueData
    eqTitle: str | None = Field(None, description='Deprecated, use subTitle Instead')
    subTitle: str | None = None
    totalAdvance: str | None = Field(
        None, description='Deprecated, this should be in the in a custom subtype'
    )
    items: List[EQModeItem] | None = Field(
        None, description='Deprecated, this should be in the in a custom subtype'
    )
    audioSrc: str | None = Field(None, description='Deprecated, use the ttsSrcUrl')
    ttsSrcUrl: str | None = None


class EQModeData(RootModel[Dict[str, EQModeCard] | None]):
    root: Dict[str, EQModeCard] | None = None


class EqSection(BaseModel):
    terms: List[Term] | None = Field(None, description='deprecation path (v0.5)')
    eqModeData: EQModeData | None = None


class GetContractResponseContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    name: str
    type: ContractType
    terms: List[Term] | None = Field(None, description='deprecation path (v0)')
    qa_sections: str | None = Field(None, description='deprecation path (v0)')
    eq_section: EqSection | None = None
    iq_section: IqSection | None = None
    isOwner: bool
    ownerId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    sharedWith: List[SharedWithItem]
