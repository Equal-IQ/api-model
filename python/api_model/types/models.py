# generated by datamodel-codegen:
#   filename:  api.json

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel


class AccountType(Enum):
    artist = 'artist'
    manager = 'manager'
    lawyer = 'lawyer'
    producer = 'producer'
    publisher = 'publisher'
    executive = 'executive'


class AuthenticationErrorResponseContent(BaseModel):
    message: str


class ContractStatus(Enum):
    processing = 'processing'
    complete = 'complete'
    error = 'error'
    awaiting_upload = 'awaiting_upload'


class SharedWithItem(RootModel[str]):
    root: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class SharedUser(RootModel[str]):
    root: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class SharedEmail(RootModel[str]):
    root: str = Field(..., pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$')


class ContractType(Enum):
    recording = 'recording'
    publishing = 'publishing'
    management = 'management'
    producer = 'producer'
    services = 'services'
    tbd = 'tbd'


class ContractVariableType(Enum):
    eq_term = 'eq_term'
    discovered_term = 'discovered_term'
    external_term = 'external_term'
    internal_citation = 'internal_citation'


class DeleteContractRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class DeleteContractResponseContent(BaseModel):
    success: bool


class FixedTermValue(BaseModel):
    unit: str
    value: str
    name: Optional[str] = None
    numericValue: Optional[float] = None
    condition: Optional[str] = None


class FixedValueTermInference(BaseModel):
    primary: FixedTermValue
    subterms: Optional[List[FixedTermValue]] = None


class GetContractReadURLRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class GetContractReadURLResponseContent(BaseModel):
    url: str


class GetContractRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class GetProfilePictureRequestContent(BaseModel):
    userId: Optional[str] = Field(None, pattern='^[A-Za-z0-9-]+$')


class GetProfilePictureResponseContent(BaseModel):
    profilePictureURL: str


class GetProfileRequestContent(BaseModel):
    userId: Optional[str] = Field(None, pattern='^[A-Za-z0-9-]+$')


class GetSpecialContractRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class GetSpecialContractResponseContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    name: str
    type: ContractType
    eqmode: Any
    sections: Any
    isOwner: bool
    ownerId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    sharedWith: List[SharedWithItem]


class GetTTSURLsRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')


class GetUploadURLRequestContent(BaseModel):
    name: str


class InternalServerErrorResponseContent(BaseModel):
    message: str


class PingResponseContent(BaseModel):
    message: str


class PresignedPostData(BaseModel):
    url: str
    fields: Any


class ProcessingIncompleteErrorResponseContent(BaseModel):
    message: str


class QA(BaseModel):
    question: str
    answer: str


class QASection(BaseModel):
    section: str
    qa: List[QA]


class ResourceNotFoundErrorResponseContent(BaseModel):
    message: str


class EmailsToAddItem(RootModel[str]):
    root: str = Field(..., pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$')


class EmailsToRemoveItem(RootModel[str]):
    root: str = Field(..., pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$')


class ShareContractRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    emailsToAdd: Optional[List[EmailsToAddItem]] = None
    emailsToRemove: Optional[List[EmailsToRemoveItem]] = None


class AddedItem(RootModel[str]):
    root: str = Field(..., pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$')


class RemovedItem(RootModel[str]):
    root: str = Field(..., pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$')


class InvalidRemove(RootModel[str]):
    root: str = Field(..., pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$')


class SharedUserDetails(BaseModel):
    userId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    email: str = Field(..., pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$')
    sharedTime: float


class TTSPresignedUrlMap(RootModel[Optional[Dict[str, str]]]):
    root: Optional[Dict[str, str]] = None


class Term(BaseModel):
    name: str
    definition: str
    unitType: str
    citation: Optional[str] = None
    fixedValues: Optional[FixedValueTermInference] = None


class UpdateContractRequestContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    name: str


class UpdateContractResponseContent(BaseModel):
    success: bool


class UpdateProfileRequestContent(BaseModel):
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    displayName: Optional[str] = None
    accountType: Optional[AccountType] = None
    bio: Optional[str] = None
    isOver18: Optional[bool] = None


class UpdateProfileResponseContent(BaseModel):
    success: bool
    message: str
    userId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    updatedFields: Optional[List[str]] = None


class UploadProfilePictureRequestContent(BaseModel):
    image: Optional[str] = None
    userId: Optional[str] = Field(None, pattern='^[A-Za-z0-9-]+$')


class UploadProfilePictureResponseContent(BaseModel):
    message: Optional[str] = None
    picture_id: Optional[str] = None


class UserProfile(BaseModel):
    userId: Optional[str] = Field(None, pattern='^[A-Za-z0-9-]+$')
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    displayName: Optional[str] = None
    email: Optional[str] = Field(
        None, pattern='^[\\w-\\.]+@[\\w-\\.]+\\.+[\\w-]{1,63}$'
    )
    accountType: Optional[AccountType] = None
    bio: Optional[str] = None


class ValidationErrorResponseContent(BaseModel):
    message: str


class ContractSummaryItem(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    name: str
    uploadedOn: float
    type: ContractType
    status: ContractStatus
    isOwner: bool
    ownerId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    sharedWith: Optional[List[SharedWithItem]] = None
    sharedUsers: Optional[List[SharedUser]] = None
    sharedEmails: Optional[List[SharedEmail]] = None


class ContractVariable(BaseModel):
    name: str
    type: ContractVariableType
    id: str
    value: Optional[str] = None
    level: Optional[float] = None
    confidence: Optional[float] = None
    firstOccurrence: Optional[float] = None
    context: Optional[str] = None
    variations: Optional[List[str]] = None
    referencedSection: Optional[str] = None
    definitionCitation: Optional[str] = None


class EqSection(BaseModel):
    terms: Optional[List[Term]] = None


class ExposeTypesResponseContent(BaseModel):
    QASectionsList: Optional[List[QASection]] = None
    ContractVariable_1: Optional[ContractVariable] = Field(
        None, alias='ContractVariable'
    )
    ContractVariableType_1: Optional[ContractVariableType] = Field(
        None, alias='ContractVariableType'
    )


class GetProfileResponseContent(BaseModel):
    userId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    profile: UserProfile


class GetTTSURLsResponseContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    tts_presigned_urls: TTSPresignedUrlMap


class GetUploadURLResponseContent(BaseModel):
    url_info: PresignedPostData


class IqSection(BaseModel):
    qa_sections: Optional[List[QASection]] = None


class ListContractsResponseContent(BaseModel):
    owned: List[ContractSummaryItem]
    shared: List[ContractSummaryItem]


class ListSpecialContractsResponseContent(BaseModel):
    owned: List[ContractSummaryItem]
    shared: List[ContractSummaryItem]


class ShareContractResponseContent(BaseModel):
    success: bool
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    sharedWith: List[SharedUserDetails]
    added: Optional[List[AddedItem]] = None
    removed: Optional[List[RemovedItem]] = None
    invalidRemoves: Optional[List[InvalidRemove]] = None


class GetContractResponseContent(BaseModel):
    contractId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    name: str
    type: ContractType
    terms: Optional[List[Term]] = None
    qa_sections: Optional[str] = None
    eq_section: Optional[EqSection] = None
    iq_section: Optional[IqSection] = None
    isOwner: bool
    ownerId: str = Field(..., pattern='^[A-Za-z0-9-]+$')
    sharedWith: List[SharedWithItem]
